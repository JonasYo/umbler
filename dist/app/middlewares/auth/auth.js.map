{"version":3,"sources":["../../../../src/app/middlewares/auth/auth.js"],"names":["req","res","next","authHeader","headers","authorization","status","json","message","code","split","token","jwt","verify","authConfig","secret","decoded","userId","id"],"mappings":";;;;;;;;AAAA;;;;AACA;;AAEA;;;;;;;;;qEAEe,iBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,sBADO,GACMH,IAAII,OAAJ,CAAYC,aADlB;;AAAA,gBAGRF,UAHQ;AAAA;AAAA;AAAA;;AAAA,6CAIJF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,uBAAS,sBADiB;AAE1BC,oBAAM;AAFoB,aAArB,CAJI;;AAAA;AAAA,gCAUKN,WAAWO,KAAX,CAAiB,GAAjB,CAVL,6DAUJC,KAVI;AAAA;AAAA;AAAA,mBAaW,qBAAUC,uBAAIC,MAAd,EAAsBF,KAAtB,EAA6BG,eAAWC,MAAxC,CAbX;;AAAA;AAaLC,mBAbK;;;AAeXhB,gBAAIiB,MAAJ,GAAaD,QAAQE,EAArB;;AAfW,6CAiBJhB,MAjBI;;AAAA;AAAA;AAAA;AAAA,6CAmBJD,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,uBAAS,gBADiB;AAE1BC,oBAAM;AAFoB,aAArB,CAnBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport { promisify } from 'util';\r\n\r\nimport authConfig from '../../../config/auth';\r\n\r\nexport default async (req, res, next) => {\r\n  const authHeader = req.headers.authorization;\r\n\r\n  if (!authHeader) {\r\n    return res.status(401).json({\r\n      message: 'Token não fornecido.',\r\n      code: 'ERROR_UNAUTHORIZED',\r\n    });\r\n  }\r\n\r\n  const [, token] = authHeader.split(' ');\r\n\r\n  try {\r\n    const decoded = await promisify(jwt.verify)(token, authConfig.secret);\r\n\r\n    req.userId = decoded.id;\r\n\r\n    return next();\r\n  } catch (err) {\r\n    return res.status(401).json({\r\n      message: 'Token inválido',\r\n      code: 'ERROR_UNAUTHORIZED',\r\n    });\r\n  }\r\n};\r\n"]}