{"version":3,"sources":["../../../src/app/controllers/DeviceController.js"],"names":["UserController","req","res","User","findOne","where","email","body","userExists","status","json","message","code","create","id","name","UserRole","user_id","role_id","userRole","Mail","sendMail","from","to","subject","template","context","user","attachments","filename","path","process","cwd","cid","flag","params","findByPk","userId","oldPassword","password","checkPassword","update","phone","date_birth"],"mappings":"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","file":"DeviceController.js","sourcesContent":["/* eslint-disable camelcase */\r\nimport User from '../models/User';\r\nimport UserRole from '../models/UserRole';\r\n\r\nimport Mail from '../../lib/Mail';\r\n\r\nclass UserController {\r\n  async create(req, res) {\r\n    const userExists = await User.findOne({ where: { email: req.body.email } });\r\n\r\n    if (userExists) {\r\n      return res.status(400).json({\r\n        message: 'Usuário com este email já está cadastrado.',\r\n        code: 'ERROR_BAD_REQUEST',\r\n      });\r\n    }\r\n\r\n    const { id, name, email } = await User.create(req.body);\r\n\r\n    const userRole = await UserRole.create({\r\n      user_id: id,\r\n      role_id: req.body.role_id,\r\n    });\r\n\r\n    if (!userRole) {\r\n      return res.status(400).json({\r\n        message: 'Erro ao definir o perfil para este usuário.',\r\n        code: 'ERROR_BAD_REQUEST',\r\n      });\r\n    }\r\n\r\n    Mail.sendMail({\r\n      from: '\"Imaria Design\" <noreply@imariasobrancelhas.com>',\r\n      to: `${email}`,\r\n      subject: `I'maria - Seja Bem-vindo`,\r\n      template: 'subscription',\r\n      context: {\r\n        user: `${name}`,\r\n      },\r\n      attachments: [\r\n        {\r\n          filename: 'image.png',\r\n          path: `${process.cwd()}/src/resources/images/logo.png`,\r\n          cid: 'logo',\r\n        },\r\n      ],\r\n    });\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      email,\r\n    });\r\n  }\r\n\r\n  async update(req, res) {\r\n    const { flag } = req.params;\r\n    const user = await User.findByPk(req.userId);\r\n\r\n    if (flag === 'userPassword') {\r\n      const { oldPassword, password } = req.body;\r\n\r\n      if (!oldPassword || !password) {\r\n        return res.status(400).json({\r\n          message:\r\n            'Você não pode deixar os campos de Senha atual, Nova senha e Confirma nova senha vazios.',\r\n          code: 'ERROR_BAD_REQUEST',\r\n        });\r\n      }\r\n\r\n      if (oldPassword && !(await user.checkPassword(oldPassword))) {\r\n        return res.status(401).json({\r\n          message: 'A senha sua senha antiga parece estar incorreta.',\r\n          code: 'ERROR_BAD_REQUEST',\r\n        });\r\n      }\r\n\r\n      await user.update(req.body);\r\n    } else if (flag === 'userInfomation') {\r\n      const { name, phone, date_birth } = req.body;\r\n\r\n      if (!name || !phone || !date_birth) {\r\n        return res.status(400).json({\r\n          message:\r\n            'Você não pode deixar os campos de nome, telefone ou data de nascimento vazios.',\r\n          code: 'ERROR_BAD_REQUEST',\r\n        });\r\n      }\r\n\r\n      await user.update(req.body);\r\n    } else {\r\n      return res.status(400).json({\r\n        message: 'Houve um erro ao processar flag informada',\r\n        code: 'ERROR_BAD_REQUEST',\r\n      });\r\n    }\r\n\r\n    const { id, name, email, date_birth, phone } = await User.findByPk(\r\n      req.userId\r\n    );\r\n\r\n    return res.json({\r\n      id,\r\n      name,\r\n      email,\r\n      date_birth,\r\n      phone,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserController();\r\n"]}